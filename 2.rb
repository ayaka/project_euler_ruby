#Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

#By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

def fibonacci_even_sum (up_to)
  return 0 if up_to < 2
  return 2 if up_to == 2
  n1, n2 = 1, 2
  sum = 2
  fib = 0
  while fib < up_to
    fib = n1 + n2
    sum += fib if fib.even?
    n1, n2 = n2, fib
  end
  sum
end

def fibonacci_even_sum_rec (up_to, n1 = 1, n2 = 2, sum = 2)
  return 0 if up_to < 2
  return 2 if up_to == 2
  fib = n1 + n2
  sum += fib if fib.even?
  return sum if fib >= up_to
  fibonacci_even_sum_rec(up_to, n1 = n2, n2 = fib, sum)
end

puts fibonacci_even_sum(89)
puts fibonacci_even_sum(4000000)

puts fibonacci_even_sum_rec(89)
puts fibonacci_even_sum_rec(4000000)
